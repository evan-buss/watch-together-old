 ☐ Create a login page where users enter their username and either create or join a room
 ☐ Add Hub methods that allow viewing data without modifying it (maintain thread safety)

Maybes:
    ☐ Websockets should belong to channels
        - If I make this more of a centralized application, users should only receive messages from their channel
        - Sort of a pub/sub style...

Parser:
    ☐ Better duplicate handling
        Right now https://wwww and wwww. are both allowed to be primary keys, resulting in some duplicate movies
    ☐ Better no value handling 
        ☐ Years Missing
            Make a selector for years that have a range (TV SHOWS)
        ☐ Ratings Missing
        ☐ Summaries Missing
    ☐ Scrape the url of the lower res thumbnail as well as the high-res poster
    ☐ Use something more robust like docker / postgresql?
    ☐ Might use a set lower limit on the number of ratings. Movies that aren't rated enough are skipped. IWill help weed out the trash results.

Tomorrow:
    ☐ Work on backend server. Start playing with video transcodes
    ✔ Re-implement library searching your cards @done(19-11-17 11:30)
    ✔ Some sort of notification component to show event messages to all viewers @done(19-11-18 22:28)
      Good change to learn how notifications are implemented and how they stack on top of each other
    ☐ Learn more about Svelte animation and motion to make app feel smooth and polished 
    ✔ Paginate the resutls @done(19-11-17 14:17)
    ✔ Movies without automatic metadata should still be playable @done(19-11-18 22:28)
    ☐ Make a grid layout. Need to use custom css or a hacky flexbox col of flexbox rows
    ☐ Make notifications alert all connected users
    ☐ List total number of connected users
    ☐ Try to clean up front-end logic. Need clear smart and dumb components. Right now most of the components manage the state themselves...


Metadata:
    ☐ The metadata server should not clear the existing metadata on scan.
        I could have a flag column that signals if the metadata was set manually and therefore not overwrite that row
        I could also keep the existing data but the scan should update for changes. One way would be to get all items and then loop through the filesystem to determine if things are still where they say they are in the metadata database.
    ✔ The frontend shouldn't allow metadata searches if the user supplies a year without a title. @done(19-11-17 16:22)
    ✘ Metadata modal should be scrollable @cancelled(19-11-17 14:35)

Server:
    ☐ Want to update a single movie item in the array with the returned updated object from the POST request. 
        I cannot figure out why updating an array doesn't prompt reactive changes. For now I am just reloading the entire
        library.
    MAYBE:
        ☐ Implement library pagination
